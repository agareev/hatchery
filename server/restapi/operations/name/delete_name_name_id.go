// Code generated by go-swagger; DO NOT EDIT.

package name

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteNameNameIDHandlerFunc turns a function with the right signature into a delete name name ID handler
type DeleteNameNameIDHandlerFunc func(DeleteNameNameIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteNameNameIDHandlerFunc) Handle(params DeleteNameNameIDParams) middleware.Responder {
	return fn(params)
}

// DeleteNameNameIDHandler interface for that can handle valid delete name name ID params
type DeleteNameNameIDHandler interface {
	Handle(DeleteNameNameIDParams) middleware.Responder
}

// NewDeleteNameNameID creates a new http.Handler for the delete name name ID operation
func NewDeleteNameNameID(ctx *middleware.Context, handler DeleteNameNameIDHandler) *DeleteNameNameID {
	return &DeleteNameNameID{Context: ctx, Handler: handler}
}

/*DeleteNameNameID swagger:route DELETE /name/{nameId} name deleteNameNameId

delete name

*/
type DeleteNameNameID struct {
	Context *middleware.Context
	Handler DeleteNameNameIDHandler
}

func (o *DeleteNameNameID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteNameNameIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
