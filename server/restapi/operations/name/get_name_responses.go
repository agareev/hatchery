// Code generated by go-swagger; DO NOT EDIT.

package name

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"hatchery/server/models"
)

// GetNameOKCode is the HTTP code returned for type GetNameOK
const GetNameOKCode int = 200

/*GetNameOK name info

swagger:response getNameOK
*/
type GetNameOK struct {

	/*
	  In: Body
	*/
	Payload models.NameCollectionResponse `json:"body,omitempty"`
}

// NewGetNameOK creates GetNameOK with default headers values
func NewGetNameOK() *GetNameOK {

	return &GetNameOK{}
}

// WithPayload adds the payload to the get name o k response
func (o *GetNameOK) WithPayload(payload models.NameCollectionResponse) *GetNameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get name o k response
func (o *GetNameOK) SetPayload(payload models.NameCollectionResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.NameCollectionResponse{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetNameInternalServerErrorCode is the HTTP code returned for type GetNameInternalServerError
const GetNameInternalServerErrorCode int = 500

/*GetNameInternalServerError Not Ok

swagger:response getNameInternalServerError
*/
type GetNameInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.HatcheryError `json:"body,omitempty"`
}

// NewGetNameInternalServerError creates GetNameInternalServerError with default headers values
func NewGetNameInternalServerError() *GetNameInternalServerError {

	return &GetNameInternalServerError{}
}

// WithPayload adds the payload to the get name internal server error response
func (o *GetNameInternalServerError) WithPayload(payload *models.HatcheryError) *GetNameInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get name internal server error response
func (o *GetNameInternalServerError) SetPayload(payload *models.HatcheryError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNameInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
