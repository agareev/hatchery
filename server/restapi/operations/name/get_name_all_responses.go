// Code generated by go-swagger; DO NOT EDIT.

package name

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"hatchery/server/models"
)

// GetNameAllOKCode is the HTTP code returned for type GetNameAllOK
const GetNameAllOKCode int = 200

/*GetNameAllOK all names info

swagger:response getNameAllOK
*/
type GetNameAllOK struct {

	/*
	  In: Body
	*/
	Payload models.NameCollectionResponse `json:"body,omitempty"`
}

// NewGetNameAllOK creates GetNameAllOK with default headers values
func NewGetNameAllOK() *GetNameAllOK {

	return &GetNameAllOK{}
}

// WithPayload adds the payload to the get name all o k response
func (o *GetNameAllOK) WithPayload(payload models.NameCollectionResponse) *GetNameAllOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get name all o k response
func (o *GetNameAllOK) SetPayload(payload models.NameCollectionResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNameAllOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.NameCollectionResponse{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetNameAllInternalServerErrorCode is the HTTP code returned for type GetNameAllInternalServerError
const GetNameAllInternalServerErrorCode int = 500

/*GetNameAllInternalServerError Not Ok

swagger:response getNameAllInternalServerError
*/
type GetNameAllInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.HatcheryError `json:"body,omitempty"`
}

// NewGetNameAllInternalServerError creates GetNameAllInternalServerError with default headers values
func NewGetNameAllInternalServerError() *GetNameAllInternalServerError {

	return &GetNameAllInternalServerError{}
}

// WithPayload adds the payload to the get name all internal server error response
func (o *GetNameAllInternalServerError) WithPayload(payload *models.HatcheryError) *GetNameAllInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get name all internal server error response
func (o *GetNameAllInternalServerError) SetPayload(payload *models.HatcheryError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNameAllInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
