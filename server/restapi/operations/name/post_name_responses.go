// Code generated by go-swagger; DO NOT EDIT.

package name

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"hatchery/server/models"
)

// PostNameOKCode is the HTTP code returned for type PostNameOK
const PostNameOKCode int = 200

/*PostNameOK name info

swagger:response postNameOK
*/
type PostNameOK struct {

	/*
	  In: Body
	*/
	Payload *models.NameResponse `json:"body,omitempty"`
}

// NewPostNameOK creates PostNameOK with default headers values
func NewPostNameOK() *PostNameOK {

	return &PostNameOK{}
}

// WithPayload adds the payload to the post name o k response
func (o *PostNameOK) WithPayload(payload *models.NameResponse) *PostNameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post name o k response
func (o *PostNameOK) SetPayload(payload *models.NameResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostNameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostNameInternalServerErrorCode is the HTTP code returned for type PostNameInternalServerError
const PostNameInternalServerErrorCode int = 500

/*PostNameInternalServerError Not Ok

swagger:response postNameInternalServerError
*/
type PostNameInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.HatcheryError `json:"body,omitempty"`
}

// NewPostNameInternalServerError creates PostNameInternalServerError with default headers values
func NewPostNameInternalServerError() *PostNameInternalServerError {

	return &PostNameInternalServerError{}
}

// WithPayload adds the payload to the post name internal server error response
func (o *PostNameInternalServerError) WithPayload(payload *models.HatcheryError) *PostNameInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post name internal server error response
func (o *PostNameInternalServerError) SetPayload(payload *models.HatcheryError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostNameInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
